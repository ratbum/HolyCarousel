// Generated by CoffeeScript 1.6.3
(function() {
  var MATemplateField,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  MATemplateField = (function() {
    /*
    	Stores a field in the context of a template. Not sure this is really necessary.
    */

    MATemplateField.prototype._domRef = null;

    MATemplateField.prototype._selector = '';

    MATemplateField.prototype._selectorFunction = null;

    function MATemplateField(arg) {
      this.get = __bind(this.get, this);
      this.reset = __bind(this.reset, this);
      this.set = __bind(this.set, this);
      if ((arg != null) && typeof arg === 'function') {
        arg(this);
      } else if ((arg != null) && typeof arg === 'string') {
        'process json';
      }
      if (arguments.length) {
        this.initWithJQ.apply(this, arguments);
      }
    }

    MATemplateField.prototype.initWithJQ = function(jq) {
      return this._domRef = jq;
    };

    MATemplateField.prototype.set = function(text) {
      return this._domRef.value = text;
    };

    MATemplateField.prototype.reset = function() {
      return this._domRef.value = this._default;
    };

    MATemplateField.prototype.get = function() {
      return this._domRef.value;
    };

    return MATemplateField;

  })();

}).call(this);
